version: "3.9"
services:
  frontend:
    container_name: posco-frontend
    build:
      context: frontend
      dockerfile: Dockerfile.dev
    volumes:
      - ./frontend/src:/app/src
    ports:
      - "3000:3000"
    networks:
      - traefik-public
      - default
    labels:
      - traefik.enable=true

      # Router para http
      - traefik.http.routers.posco-frontend-http.entrypoints=http
      - traefik.http.routers.posco-frontend-http.rule=Host(`${DOMAIN}`)

      # Router para https
      - traefik.http.routers.posco-frontend-https.entrypoints=https
      - traefik.http.routers.posco-frontend-https.rule=Host(`${DOMAIN}`)
      - traefik.http.routers.posco-frontend-https.tls=true





  backend:
    container_name: posco-backend
    build:
      context: backend
      dockerfile: Dockerfile.dev
    volumes:
      - ./backend/src:/app/src
    ports:
      - "8000:8000"
    depends_on:
      - db
    env_file:
      - .env
    networks:
      - traefik-public
      - default
    labels:
      - traefik.enable=true

      - traefik.http.routers.posco-backend-http.entrypoints=http
      - traefik.http.routers.posco-backend-http.rule=Host(`${DOMAIN}`) && PathPrefix(`/api`) || PathPrefix(`/docs`) || PathPrefix(`/redoc`)

      - traefik.http.routers.posco-backend-https.entrypoints=https
      - traefik.http.routers.posco-backend-https.rule=Host(`${DOMAIN}`) && PathPrefix(`/api`) || PathPrefix(`/docs`) || PathPrefix(`/redoc`)
      - traefik.http.routers.posco-backend-https.tls=true



  db:
    image: postgres:12
    restart: always
    volumes:
      - app-db-data:/var/lib/postgresql/data/pgdata
    env_file:
      - .env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}

  proxy:
    image: traefik:3.0
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "80:80"
      - "8080:8080"
      - "443:443"

    command:
      - --providers.docker
      - --providers.docker.exposedbydefault=false
      - --entrypoints.http.address=:80
      - --entrypoints.https.address=:443
      - --accesslog
      - --log
      - --log.level=DEBUG
      - --api
      - --api.insecure=true
    labels:
      - traefik.enable=true
      - traefik.http.services.traefik-dashboard.loadbalancer.server.port=8080
      - traefik.http.routers.traefik-dashboard-http.entrypoints=http
      - traefik.http.routers.traefik-dashboard-http.rule=Host(`traefik.${DOMAIN}`)

      - traefik.http.routers.traefik-dashboard-https.entrypoints=https
      - traefik.http.routers.traefik-dashboard-https.rule=Host(`traefik.${DOMAIN}`)
      - traefik.http.routers.traefik-dashboard-https.tls=true

      
    networks:
      - traefik-public
      - default
  
  

volumes:
  app-db-data:

networks:
  traefik-public:
    # Allow setting it to false for testing
    external: false
